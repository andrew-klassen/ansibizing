#!/usr/bin/env python3


import os
import shutil
import argparse

from module_scripts.config import *
from module_scripts.apt import *
from module_scripts.write_main_playbook import *
from module_scripts.write_config import *
from module_scripts.write_hosts import *
from module_scripts.git import *
from module_scripts.copy import *
from module_scripts.service import *
from module_scripts.file import *
from module_scripts.web_download import * 
from module_scripts.general_functions import *
from module_scripts.unarchive import *


actions = ["create", "prep"]
action_descriptions = ["prep - parses through history and removes invalid commands", 
                       "create - creates the ansible playbook"]

parser = argparse.ArgumentParser(formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument("action", type=str, choices=actions, help="This tells the script what to do. The following actions are available.\n\n" +"\n".join(action_descriptions),  metavar="action")
parser.add_argument("-u", "--user", type=str, help="bash user whos history should be used, by default its root's")

args = parser.parse_args()

lines = set_history(args.user)

if args.action == "create":
    # delete existing ansible workspace if one exists
    try:
        shutil.rmtree(cwd + "/playbook")
    except:
        pass

    # create ansible directory stucture
    os.mkdir( cwd + "/playbook" )
    os.mkdir( cwd + "/playbook/source" )
    os.mkdir( cwd + "/playbook/roles" )
    os.mkdir( cwd + "/playbook/roles/main" )
    os.mkdir( cwd + "/playbook/roles/main/tasks" )

    # create playbook and config files
    create_playbook(cwd)
    create_config(cwd)
    create_hosts(cwd)

    # write main role

    # prefix
    file_object = open(cwd + "/playbook/roles/main/tasks/main.yml", "a+")
    file_object.write("---\n")
    file_object.write("\n")
    file_object.close()

    apt_key_add(lines,cwd)
    ppa_add(lines,cwd)
    apt(lines,cwd)
    mkdir(lines,cwd)
    git_clone(lines,cwd)
    wget(lines,cwd)
    curl(lines,cwd)
    tar(lines,cwd)

    copy_config(lines,cwd)
    chmod(lines,cwd)
    chown(lines,cwd)
    systemctl(lines,cwd)

    # postfix
    file_object = open(cwd + "/playbook/roles/main/tasks/main.yml", "a+")
    file_object.write("...")
    file_object.close()

elif args.action == "prep":
    prep(cwd)
    
